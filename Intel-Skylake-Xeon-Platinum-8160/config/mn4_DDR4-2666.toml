[Platform]
name = "aws-m5-metal-8259cl"
cpu = "Intel Xeon Platinum 8259CL"
cpu-freq = 2.5               ; 实际请替换成 AWS 上报告的主频
motherboard = "AWS Nitro"
mem = "DDR4-2666 8GB×6 per socket"
mem-type = "DDR4"
mem-freq = 2666
mem-max-channels = 6
stlb-hit-latency = 9

[Experiments]
; -----------------------------
; 对单个 NUMA node（socket 0）使用 24 核
; -----------------------------
stream-core-list           = "0-23"
stream-core-count          = 24
stream-core-count-socket   = 24
stream-numactl-additional-args = "--cpunodebind=0 --membind=0"

; ptrchase 随机延迟测单个核，也绑定到 node 0
ptrchase-core              = "0"
ptrchase-numactl-additional-args = "--cpunodebind=0 --membind=0"

; 读/写比例从 0% 到 100%
rwratio-min                = 0
rwratio-max                = 100
rwratio-step               = 2

; 等待流式测试稳定的时间
stream-pauses              = [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,80,90,100,120,140,160,180,200,220,260,300,340,380,450,550,600,700,800,900,1000,1500,2000,3000,5000,40000,100000,500000,1000000]

; 测试重复次数
point-reps                 = 1
bw-meas-reps               = 1
lat-meas-reps              = 1

; 启动后等 20 秒让流量稳定，再测带宽/延迟
time-stream-stabilize      = 20
time-after-bw              = 4
time-after-stream-termination = 0

[Counters]
; 带宽用 VTune（也可以改用 perf + uncore_imc_*）
bw-tool                    = "vtune"
bw-tool-path               = "/apps/INTEL/2020.0.088/parallel_studio_xe_2020/vtune_profiler_2020/bin64/vtune"
bw-tool-cores              = "0-7"
bw-tool-sample-time        = "5s"
bw-tool-counters           = """\
INSTR_RETIRED_ANY:FIXC0,\
CPU_CLK_UNHALTED_CORE:FIXC1,\
CPU_CLK_UNHALTED_REF:FIXC2,\
LONGEST_LAT_CACHE_MISS:PMC0,\
CAS_COUNT_RD:MBOX0C0,\
CAS_COUNT_WR:MBOX0C1,\
CAS_COUNT_RD:MBOX1C0,\
CAS_COUNT_WR:MBOX1C1,\
CAS_COUNT_RD:MBOX2C0,\
CAS_COUNT_WR:MBOX2C1,\
CAS_COUNT_RD:MBOX3C0,\
CAS_COUNT_WR:MBOX3C1,\
"""

; 延迟用 perf pointer-chase
lat-tool                   = "perf"
lat-tool-path              = "perf"
lat-tool-counters          = "cycles:u,instructions:u,r2008:u,r1008:u"

[Processing]
smooth-savgol-window-length = 11
smooth-savgol-polyorder    = 3

[Benchmarks]
ptrchase-num-instructions  = 100000000
ptrchase-num-iterations    = 5000
ptrchase-array-size        = "1 * 1024 * 1024 * 1024"